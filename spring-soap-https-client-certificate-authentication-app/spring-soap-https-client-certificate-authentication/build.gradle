buildscript {
	ext {
		springBootVersion = '2.1.8.RELEASE'
	}
	
    repositories {
    	mavenLocal()
    	mavenCentral()
    }
    
    dependencies {
    	classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 12
targetCompatibility = 12

sourceSets.main.java.srcDirs "src/generated-sources/java"
sourceSets.main.resources.excludes = ['temperature.xsd']

configurations {
    jaxb
}

repositories {
    mavenLocal()
	mavenCentral()
}

dependencies {
	implementation('org.jvnet.mimepull:mimepull:1.9.11')
	implementation("org.springframework.boot:spring-boot-starter-web-services:${springBootVersion}")
	implementation("wsdl4j:wsdl4j:1.6.3")
	implementation('com.sun.xml.bind:jaxb-xjc:2.4.0-b180830.0438')
    implementation('javax.xml.bind:jaxb-api:2.4.0-b180830.0359')
    implementation('com.sun.xml.bind:jaxb-impl:2.4.0-b180830.0438')
    implementation('com.sun.istack:istack-commons-runtime:3.0.9')
    jaxb (
        'com.sun.xml.bind:jaxb-xjc:2.4.0-b180830.0438',
        'javax.xml.bind:jaxb-api:2.4.0-b180830.0359',
        'com.sun.xml.bind:jaxb-impl:2.4.0-b180830.0438',
        'com.sun.istack:istack-commons-runtime:3.0.9'
    )
}

task jaxb {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/generated-sources/java")
    
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
                name: 'xjc',
            classname: 'com.sun.tools.xjc.XJCTask',
            classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
            destdir: '${jaxbTargetDir}',
            package: 'com.roytuts.jaxb',
            schema: 'src/main/resources/xsd/temperature.xsd'
        )
    }
}

compileJava.dependsOn jaxb